services:
  catalog.api:
    build:
      context: D:\SamplesAPI\aspnet-microservices
      dockerfile: Services/Catalog/Catalog.Api/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: '8001'
      ASPNETCORE_HTTP_PORT: '8000'
      ASPNETCORE_Kestrel__Certificates__Default__Password: 123456-a
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_URLS: https://+;http://+
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    ports:
    - published: 8000
      target: 80
    - published: 8001
      target: 443
    volumes:
    - C:\Users\RICARDO\.aspnet\https:/https:ro
    - C:\Users\RICARDO\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\RICARDO\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  catalogdb:
    container_name: catalogdb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
version: '3.4'
volumes:
  mongo_data: {}